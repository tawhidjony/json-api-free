"""modify users table

Revision ID: fc94556f5056
Revises: 0001_create_users
Create Date: 2025-09-03 11:03:46.601741
"""
from __future__ import annotations

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fc94556f5056'
down_revision = '0001_create_users'
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the UserStatus enum type first
    userstatus_enum = postgresql.ENUM('pending', 'approved', 'rejected', name='userstatus')
    userstatus_enum.create(op.get_bind())
    
    # Add columns
    op.add_column('users', sa.Column('department', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('assigned_training', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('completed_training', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='userstatus'), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'status')
    op.drop_column('users', 'completed_training')
    op.drop_column('users', 'assigned_training')
    op.drop_column('users', 'department')
    
    # Drop the enum type
    userstatus_enum = postgresql.ENUM('pending', 'approved', 'rejected', name='userstatus')
    userstatus_enum.drop(op.get_bind())
    # ### end Alembic commands ###
